exp_id = 'exp_metaLearn_01';
exppath_short = 'exp/experiments';
exp_description = 'First experiment with meta-learning models.';

modelOptions = { ...
  'gp', { ...
    'covFcn',             { '@covSEiso' }, ...
    'hyp',                { struct('lik', log(0.01), 'cov', log([1; 2])) }, ...
    'covBounds',          { [log(1) log(1); -2 25 ] }, ...
    'meanFcn',            { 'meanConst' }, ...
    'trainAlgorithm',     { 'fmincon' }, ...
    'predictionType',     { 'poi', 'fvalues' }, ...
    'useShift',           { false }, ...
    'normalizeY',         { true }, ...
  }, ...
  'rf', { ...
    'nBestPoints', { 5, 5 }, ...
    'minLeaf', { 1, 2 }, ...
    'inputFraction', { 1 }, ...
  } ...
};

opts.modelTypes = { 'rf', 'gp' };

% CV settings
opts.cv_type = 'KFold';
opts.cv_param = 10;
opts.cv_ind = 1:opts.cv_param;

% the CV can be run in a parallel worker pool
opts.use_parpool = false;
opts.parpool_size = 10;

% RNG options
opts.use_rng_seed = true;
opts.rng_seed = 42;

% I/O
opts.fname_template = strjoin({'data_metalearn_', ...
  '%dD_', ...
  'f%d_', ...
  'inst%d_', ...
  'N%d_', ...
  'design-%s.mat'}, '' ...
);
opts.dataset_path = 'data_metalearning';

% logDir = '/storage/plzen1/home/repjak/public';